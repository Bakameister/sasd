import { ActionRowBuilder, ButtonBuilder, ButtonStyle, AttachmentBuilder, EmbedBuilder } from 'discord.js';
import { saveState } from '../../../utils/storage.js';

export const data = {
  name: 'sasd',
  description: 'Crea mensaje en el canal de normativas IC/OCC',
};

export async function execute(message) {
  try {
    const row = new ActionRowBuilder().addComponents(
      new ButtonBuilder()
        .setCustomId('sasd1')
        .setLabel('üìë Interpretaci√≥n de rol')
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('sasd2')
        .setLabel('üìë Ingreso a la facci√≥n')
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('sasd3')
        .setLabel('üìë Nuestra academia')
        .setStyle(ButtonStyle.Secondary)
    );

    const reglasImage = new AttachmentBuilder('./images/header_sasd.png');
    const reglasImage2 = new AttachmentBuilder('./images/header_sasd2.png');

    const statusEmbed = new EmbedBuilder()
      .setColor(global.postulacionesAbiertas ? '#00ff00' : '#ff0000')
      .setDescription(global.postulacionesAbiertas
        ? `\`\`\`less\nPOSTULACIONES ABIERTAS\n\`\`\`\n`
        : `\`\`\`ml\nPOSTULACIONES CERRADAS\n\`\`\`\n`);

    await message.channel.send({ content: '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n' });
    await message.channel.send({ files: [reglasImage] });
    await message.channel.send({ files: [reglasImage2] });
    await message.channel.send({ components: [row] });
    await message.channel.send({ content: '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n' });
    await message.channel.send({ content: '> Antes de comenzar el proceso de postulaci√≥n, es importante que entiendas los pasos que forman parte de nuestra selecci√≥n. El camino para ingresar al SASD no es sencillo, pero es una excelente oportunidad para demostrar tu compromiso y habilidades. Te explicamos brevemente c√≥mo funciona el proceso:\n\n**\`‚Äé1. POSTULACI√ìN INICIAL‚Äé \`‚Äé ‚Äé <:placa2:1349789910860693575>\n**Para iniciar tu proceso de admisi√≥n a la academia del SASD, te pedimos que completes un formulario con tus datos y respondas algunas preguntas clave que nos ayudar√°n a conocer tu experiencia, motivaci√≥n y aptitudes. Esto nos permitir√° descartar postulantes r√°pidamente.\n\n**\`‚Äé2. REVISI√ìN DE POSTULACIONES‚Äé \`‚Äé ‚Äé <:placa2:1349789910860693575>\n**Nuestro equipo revisar√° cuidadosamente tu solicitud. Los postulantes seleccionados para continuar el proceso ser√°n convocados para ingresar al discord de la academia del SASD (Biscailuz Center Academy Training) y recibir√°n instrucciones lo antes posible.\n\n**\`‚Äé3. PERIODO EN LA ACADEMIA‚Äé \`‚Äé ‚Äé <:placa2:1349789910860693575>\n**Una vez aceptado, pasar√°s a la Academia, donde recibir√°s formaci√≥n en diversas √°reas esenciales, como patrullaje, protocolos de seguridad, c√≥digos de radio, y habilidades de trabajo en equipo. Durante este periodo, evaluaremos tu desempe√±o y tu capacidad para adaptarte a las exigencias del cuerpo.\n\n**\`‚Äé4. EVALUACI√ìN FINAL Y SELECCI√ìN‚Äé \`‚Äé ‚Äé <:placa2:1349789910860693575>\n**Al finalizar la academia, aquellos que demuestren un alto nivel de compromiso, habilidades y aptitudes necesarias ser√°n elegidos para formar parte oficial del SASD.\n\n> Es importante que sepas que el proceso es competitivo y solo los mejores ser√°n seleccionados para formar parte de nuestra unidad. Si est√°s listo para asumir el desaf√≠o, te invitamos a completar el formulario de postulaci√≥n. Utiliza el comando `/formulario`\n‚Äé ' });
    const statusMsg = await message.channel.send({ embeds: [statusEmbed] });

    // Guardar el ID del mensaje y del canal para futuras actualizaciones
    global.mensajeEstadoPostulacionesId = statusMsg.id;
    global.mensajeEstadoChannelId = message.channel.id;

    // Guardar el estado actualizado
    await saveState({
      postulacionesAbiertas: global.postulacionesAbiertas,
      mensajeEstadoPostulacionesId: global.mensajeEstadoPostulacionesId,
      mensajeEstadoChannelId: global.mensajeEstadoChannelId
    });

    await message.delete();
  } catch (error) {
    console.error('Error al ejecutar el comando:', error);
    await message.reply('‚ùå Hubo un error al enviar las reglas.');
  }
}